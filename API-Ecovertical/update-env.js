// Script para actualizar el archivo .env con configuraci√≥n de PostgreSQL
import fs from 'fs';
import path from 'path';

const envContent = `# Configuraci√≥n de la base de datos PostgreSQL
DB_HOST=localhost
DB_USER=postgres
DB_PASS=ubiquiti
DB_NAME=huertos
DB_PORT=5432

# Configuraci√≥n del servidor
PORT=3000
#production
NODE_ENV=development

# Configuraci√≥n JWT
ACCESS_TOKEN_SECRET=cambia_este_secreto_en_produccion
REFRESH_TOKEN_SECRET=cambia_este_secreto_refresh_en_produccion

# Duraci√≥n de tokens JWT (7 d√≠as)
ACCESS_TOKEN_EXPIRES_IN=7d
REFRESH_TOKEN_EXPIRES_IN=7d

# Configuraci√≥n de CORS
CORS_ORIGIN=http://localhost:5173

# Configuraci√≥n de rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Configuraci√≥n de email (Gmail)
EMAIL_USER=tu_email@gmail.com
EMAIL_PASS=tu_app_password_gmail

# URL del frontend
FRONTEND_URL=http://localhost:5173

GEMINI_API_KEY=
GEMINI_MODEL=gemini-2.5-flash`;

try {
  fs.writeFileSync('.env', envContent);
  console.log('‚úÖ Archivo .env actualizado con configuraci√≥n de PostgreSQL');
  console.log('üìã Variables configuradas:');
  console.log('   DB_HOST=localhost');
  console.log('   DB_USER=postgres');
  console.log('   DB_PASS=ubiquiti');
  console.log('   DB_NAME=huertos');
  console.log('   DB_PORT=5432');
} catch (error) {
  console.error('‚ùå Error al actualizar .env:', error.message);
}
